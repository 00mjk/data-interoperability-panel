Trusted Agents {#trusted}
=====================

## Overview ## {#trusted-overview}

A [=trusted Agent=] is an application that a [=Agent=] trusts
to perform actions for them with elevated privilege. They can be
trusted to help a [=Agent=] to make smart decisions related to
their data.

There's no limit to what a trusted agent can
assist with, but [[#appreg|registering applications]] and authorizing access to
data are two critical operations covered in this proposal.

A trusted [=application registration agent=] helps the [=Agent=]
make smart decisions about the applications they choose to utilize, and
ensure they get provisioned appropriately.

A trusted agent for data authorization is needed in cases where the resource
controller wishes to grant limited access to data in her Pod to another
[=authenticated agent=] or [=user-piloted application=], but needs
assistance to determine what access is needed, and help to provision
that access.

There are three typical patterns to interact with a trusted agent;
*Embedded*, *Synchronous*, and *Asynchronous*.

The **Embedded pattern** is employed when the application in question has full
control privileges, and the trusted agent capabilities can
be executed directly. An example of an application that could fall into
this category would be a Pod management application installed by default
by the userâ€™s Pod provider.

The **Synchronous pattern** utilizes a web-based redirect flow much like an
OAuth2 grant flow. The user is redirected to the trusted agent URL, with
a callback parameter provided as part of the request. When the
trusted agent is finished, it sends the user back to the provided
callback URL. This is an excellent pattern for application registration
and data authorization.

The **Asynchronous pattern** utilizes an event based model, where a message is
sent to the Trusted Agent through some mechanism (direct, pubsub, etc).
This flow is most typical for server-side/bot applications or any piloted
clients that can make use of asynchronous notification processing.

A given trusted agent may employ one or more of these patterns.

## Data Model ## {#trusted-datamodel}

### Summary ### {#trusted-datamodel-summary}

## Resource Hierarchy ## {#trusted-hierarchy}

## Operations ## {#trusted-operations}

### Load Trusted Agent ### {#trusted-load}

### Redirect to Trusted Agent ### {#trusted-redirect}

### Return from Trusted Agent ### {#trusted-return}
