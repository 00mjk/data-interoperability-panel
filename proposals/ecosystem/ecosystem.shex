PREFIX eco: <http://www.w3.org/ns/solid/ecosystem#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>


################################################################
# Agent
################################################################

# Validate an instance of the eco:Agent class
<#AgentShape> {
  a [ eco:Agent ] ;
  eco:hasRegistrar IRI
}

################################################################
# Registrar
################################################################

# Registrar
# Validate an instance of the eco:Registrar class
<#RegistrarShape> {
  a [ eco:Registrar ] ;
  eco:hasApplicationRegistrySet IRI ;
  eco:hasDataRegistrySet IRI
}

# Application Registry Set
# Validate an instance of the eco:ApplicationRegistrySet class
################################################################
<#ApplicationRegistrySetShape> {
  a [ eco:ApplicationRegistrySet ] ;
  eco:hasRegistry IRI+
}

# Application Registry
# Validate an instance of the eco:ApplicationRegistry class
################################################################
<#ApplicationRegistryShape> {
  a [ eco:ApplicationRegistry ] ;
  eco:hasRegistration IRI*
}

# Application Registration
# Validate an instance of the eco:ApplicationRegistration class
################################################################
<#ApplicationRegistrationShape> {
  a [ eco:ApplicationRegistration ] ;
  eco:registeredBy IRI ;
  eco:registeredWith IRI ;
  eco:registeredAt xsd:dateTime ;
  eco:registeredApplication IRI
}

# Data Registry Set
# Validate an instance of the eco:DataRegistrySet class
################################################################
<#DataRegistrySetShape> {
  a [ eco:DataRegistrySet ] ;
  eco:hasRegistry IRI+
}

# Data Registry
# Validate an instance of the eco:DataRegistry class
################################################################
<#DataRegistryShape> {
  a [ eco:DataRegistry ] ;
  eco:hasRegistration IRI*
}

# Data Registration
# Validate an instance of the eco:DataRegistration class
################################################################
<#DataRegistrationShape> {
  a [ eco:DataRegistration ] ;
  eco:registeredBy IRI ;
  eco:registeredWith IRI ;
  eco:registeredAt xsd:dateTime ;
  eco:registeredShapeTree IRI ;
  eco:hasRegisteredDataInstance IRI*
}

################################################################
# Application
################################################################

# Validate an instance of the eco:Application class
<#ApplicationShape> {
  a [ eco:Application ] ;
  eco:applicationName xsd:string ;
  eco:applicationDescription xsd:string ;
  eco:applicationAuthor IRI ;
  eco:applicationAuthorName xsd:string ;
  eco:applicationThumbanil IRI ;
  eco:hasAccessNeedGroup IRI* ;
  eco:hasCollaborativeAccessNeedGroup IRI*
}

################################################################
# Access Need Groups
################################################################

# Validate an instance of the eco:AccessNeedGroup class
<#AccessNeedGroupShape> {
  a [ eco:AccessNeedGroup ] ;
  eco:accessNecessity [ eco:AccessRequired eco:AccessOptional ] ;
  eco:authenticatesAs IRI ;
  eco:hasAccessNeed IRI+ ;
  eco:hasAccessNeedOverride IRI* ;
  eco:hasAccessDecoratorIndex IRI
}

# Validate an instance of the eco:AccessNeed class
<#AccessNeedShape> {
  a [ eco:AccessNeed ] ;
  eco:inAccessNeedGroup IRI+ ;
  eco:registeredShapeTree IRI ;
  eco:hasRegisteredDataInstance IRI* ;
  eco:recursivelyAuthorize [ true false ] ;
  eco:accessMode [ acl:Read acl:Write acl:Append acl:Control ]+ ;
  eco:accessNecessity [ eco:AccessRequired eco:AccessOptional ] ;
}

# Validate an instance of a prepared eco:PreparedAccessNeedGroup class
<#PreparedAccessNeedGroupShape> {
  a [ eco:PreparedAccessNeedGroup ] ;
  eco:fromAccessNeedGroup IRI ;
  eco:hasAccessNeedGroupDecorator IRI ;
  eco:authenticatesAs IRI ;
  eco:accessNecessity [ eco:AccessRequired eco:AccessOptional ] ;
  eco:hasPreparedAccessNeed IRI+ ;
}

# Validate an instance of the eco:PreparedAccessNeed class
<#PreparedAccessNeedShape> {
  a [ eco:PreparedAccessNeed ] ;
  eco:inPreparedAccessNeedGroup IRI+ ;
  eco:hasShapeTreeDecorator IRI ;
  eco:hasAccessNeedDecorator IRI? ;
  eco:hasDataGrant IRI? ;
  eco:hasRegisteredDataInstance IRI* ;
  eco:registeredShapeTree IRI ;
  eco:accessMode [ acl:Read acl:Write acl:Append acl:Control ]+ ;
  eco:accessNecessity [ eco:AccessRequired eco:AccessOptional ] ;
  eco:supportedBy IRI* ;
  eco:supports IRI
  eco:referencesPreparedAccessNeed IRI* ;
  skos:narrower IRI* ;
}

<#AccessDecoratorIndexShape> {
  a [ eco:AccessDecoratorIndex ] ;
  eco:defaultLanguage xsd:language ;
  eco:hasSeries @AccessDecoratorSeries+ ;
}

<#AccessDecoratorSeriesShape> {
  a [ eco:AccessDecoratorSeries ] ;
  eco:usesLanguage xsd:language ;
  eco:hasVersion @AccessDecoratorVersion+ ;
}

<#AccessDecoratorVersionShape> {
  a [ eco:AccessDecoratorVersion ] ;
  eco:isVersion xsd:string ;
  eco:hasSHA256 xsd:string ;
  eco:hasAccessDecoratorResource IRI ;
}

<#AccessNeedGroupDecoratorShape> {
  a [ eco:AccessNeedGroupDecorator ] ;
  eco:hasAccessNeedGroup IRI ;
  skos:prefLabel xsd:string ;
  skos:definition xsd:string
}

<#AccessNeedDecoratorShape> {
  a [ eco:AccessNeedDecorator ] ;
  eco:hasAccessNeedGroup IRI ;
  eco:registeredShapeTree IRI ;
  skos:prefLabel xsd:string
}


################################################################
# Access Registry
################################################################

# Access Registry Set
# Validate an instance of the eco:AccessRegistrySet class
################################################################
<#AccessRegistrySetShape> {
  a [ eco:AccessRegistrySet ] ;
  eco:hasRegistry IRI+
}

# Access Registry
# Validate an instance of the eco:AccessRegistry class
################################################################
<#AccessRegistryShape> {
  a [ eco:AccessRegistry ] ;
  eco:hasRegistration IRI*
}

# Validate an instance of the AccessGrant class
<#AccessGrantShape> {
  a [ eco:AccessGrant ] ;
  eco:registeredBy IRI ;
  eco:registeredWith IRI? ;
  eco:registeredAt xsd:dateTime ;
  eco:accessGrantSubject @AccessGrantSubject ;
  eco:hasPreparedAccessNeedGroup @PreparedAccessNeedGroupShape+ ;
  eco:hasDataGrant @DataGrantShape+
}

<#AccessGrantSubjectShape> {
  a [ eco:AccessGrantSubject ] ;
  eco:accessGrantSubjectAgent IRI? ;
  eco:accessGrantSubjectApplication IRI?
}

# Validate an instance of the DataGrant class
<#DataGrantShape> {
  a [ eco:DataGrant ] ;
  eco:hasRegistration IRI ;
  eco:registeredShapeTree IRI ;
  eco:satisfiesPreparedAccessNeed @PreparedAccessNeedShape+ ;
  eco:accessMode [ acl:Read acl:Write acl:Append acl:Control ]+ ;
  eco:scopeOfDataGrant [ eco:SelectedInstances eco:AllInstances eco:InheritInstances eco:NoAccess ] ;
  eco:inheritsFromDataGrant @DataGrantShape*
}
